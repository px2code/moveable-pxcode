{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts"],"sourcesContent":["import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n  return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\n\nfunction getCursorCSS(degree: number) {\n  const x1 = getSVGCursor(1, degree);\n  const x2 = getSVGCursor(2, degree);\n  const degree45 = (Math.round(degree / 45) * 45) % 180;\n  let defaultCursor = \"ns-resize\";\n\n  if (degree45 === 135) {\n    defaultCursor = \"nwse-resize\";\n  } else if (degree45 === 45) {\n    defaultCursor = \"nesw-resize\";\n  } else if (degree45 === 90) {\n    defaultCursor = \"ew-resize\";\n  }\n\n  // tslint:disable-next-line: max-line-length\n  return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n  const res = /applewebkit\\/([^\\s]+)/g.exec(navigator.userAgent.toLowerCase());\n\n  return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #d66;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 10px;\n\theight: 10px;\n\tbox-sizing: border-box;\n    background: #fff;\n\tmargin-top: -5px;\n    margin-left: -5px;\n    border: 2px solid var(--moveable-color);\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #d66;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #d66;\n    border-top-color: #d66;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #d66;\n    border-left-color: #d66;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 10px;\n\theight: 10px;\n\tmargin-top: -5px;\n  margin-left: -5px;\n  border-radius: 5px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n  [0, 1, 2],\n  [1, 0, 3],\n  [2, 0, 3],\n  [3, 1, 2],\n];\n\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n  n: [0, 1],\n  s: [2, 3],\n  w: [2, 0],\n  e: [1, 3],\n  nw: [0],\n  ne: [1],\n  sw: [2],\n  se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n  n: 0,\n  s: 180,\n  w: 270,\n  e: 90,\n  nw: 315,\n  ne: 45,\n  sw: 225,\n  se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n  \"isMoveableElement\",\n  \"updateRect\",\n  \"updateTarget\",\n  \"destroy\",\n  \"dragStart\",\n  \"isInside\",\n  \"hitTest\",\n  \"setState\",\n  \"getRect\",\n  \"request\",\n  \"isDragging\",\n  \"getManager\",\n];\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport { splitBracket, isUndefined, isObject, splitUnit, IObject, hasClass, isArray, isString, getRad, getShapeDirection, isFunction } from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ControlPose, ArrayFormat, MoveableRefType, RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo\n} from \"./types\";\nimport { parse, toMat } from \"css-to-mat\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement, iframeSelector: string) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\", iframeSelector));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    iframeSelector: string,\n    isParent?: boolean,\n) {\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentDocument = iframe.contentDocument;\n    const body = contentDocument!.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target, iframeSelector);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (target.tagName.toLowerCase() === \"svg\" || position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null | undefined,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n    iframeSelector: string\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n        const contentDocument = iframe.contentDocument;\n        const containerClientRect = (container || contentDocument!.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement, iframeSelector)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement| SVGElement,\n    iframeSelector: string,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el, iframeSelector),\n) {\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentDocument = iframe.contentDocument;\n    const bodyStyle = getComputedStyle(contentDocument!.body, iframeSelector);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(`${bodyStyle.marginLeft}`, 10);\n    let marginTop = parseInt(`${bodyStyle.marginTop}`, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    iframeSelector: string,\n    container?: SVGElement | HTMLElement | null,\n    // prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: number[][] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, iframeSelector).offsetParent;\n\n    // if (prevMatrix) {\n    //     isEnd = target === container;\n    //     if (prevMatrix.length > 10) {\n    //         is3d = true;\n    //         n = 4;\n    //     }\n    //     container = target.parentElement;\n    // }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el, iframeSelector);\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(style.transform!));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n            const matrixesLength = matrixes.length;\n\n            for (let i = 0; i < matrixesLength; ++i) {\n                matrixes[i] = convertDimension(matrixes[i], 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed, iframeSelector);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            matrixes.push(\n                // scale matrix for svg's SVGElements.\n                getSVGMatrix(el as SVGSVGElement, n),\n                createIdentityMatrix(n),\n            );\n        } else if (tagName === \"g\" && target !== el) {\n            offsetLeft = 0;\n            offsetTop = 0;\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container, iframeSelector);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n        const contentDocument = iframe.contentDocument;\n        if (hasOffset && offsetParent === contentDocument!.body) {\n            const margin = getBodyOffset(el, iframeSelector, false, style);\n            offsetLeft += margin[0];\n            offsetTop += margin[1];\n        }\n        matrixes.push(\n            // absolute matrix\n            getAbsoluteMatrix(matrix, n, origin),\n            // offset matrix (offsetPos + clientPos(border))\n            createOriginMatrix(hasOffset ? [\n                offsetLeft - el.scrollLeft + parentClientLeft,\n                offsetTop - el.scrollTop + parentClientTop,\n            ] : [el, origin] as any, n),\n        );\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n    };\n}\nexport function calculateElementInfo(\n    iframeSelector: string,\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // state?: Partial<MoveableManagerState> | false,\n) {\n    // const prevMatrix = state ? state.beforeMatrix : undefined;\n    // const prevRootMatrix = state ? state.rootMatrix : undefined;\n    // const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n    let width: number = 0;\n    let height: number = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const style = getComputedStyle(target, iframeSelector);\n\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, iframeSelector, style, true);\n        }\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target, iframeSelector, container, rootContainer, isAbsolute3d\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        // rootMatrix: number[];\n        // beforeMatrix: number[];\n        // offsetMatrix: number[];\n        // allMatrix: number[];\n        // targetMatrix: number[];\n        // targetTransform: string;\n        // transformOrigin: number[];\n        // targetOrigin: number[];\n        // is3d: boolean;\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        // left: number;\n        // top: number;\n        // right: number;\n        // bottom: number;\n        // origin: number[];\n        // pos1: number[];\n        // pos2: number[];\n        // pos3: number[];\n        // pos4: number[];\n        // direction: 1 | -1;\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    iframeSelector: string,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(iframeSelector, target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    iframeSelector: string,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, iframeSelector, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, iframeSelector, rootContainer); // prevRootMatrix\n\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentDocument = iframe.contentDocument;\n    // if (rootContainer === contentDocument!.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || contentDocument!.body;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, iframeSelector).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n        matrixes.forEach((matrix, i) => {\n            matrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n    if (!isRoot3d && isNext3d) {\n        rootMatrixes.forEach((matrix, i) => {\n            rootMatrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    // if (!prevRootMatrix) {\n    rootMatrixes.forEach(matrix => {\n        rootMatrix = multiply(rootMatrix, matrix, n);\n    });\n    // }\n    matrixes.forEach((matrix, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (isObject(matrix[n * (n - 1)])) {\n            [matrix[n * (n - 1)], matrix[n * (n - 1) + 1]] =\n                getSVGOffset(\n                    matrix[n * (n - 1)] as any,\n                    endContainer,\n                    n,\n                    matrix[n * (n - 1) + 1] as any,\n                    allMatrix,\n                    matrixes[i + 1],\n                    iframeSelector\n                );\n        }\n        allMatrix = multiply(allMatrix, matrix, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    el: SVGElement,\n    container: HTMLElement | SVGElement,\n    n: number, origin: number[], beforeMatrix: number[], absoluteMatrix: number[],\n    iframeSelector: string) {\n\n    const [width, height] = getSize(el, iframeSelector, undefined, true);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentDocument = iframe.contentDocument;\n    if (container === contentDocument!.body) {\n        margin = getBodyOffset(el, iframeSelector,true);\n    }\n    const rect = el.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        absoluteMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            absoluteMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement, iframeSelector: string) {\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentWindow = iframe.contentWindow;\n    const style = contentWindow!.getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    iframeSelector: string,\n    style: CSSStyleDeclaration = getComputedStyle(target, iframeSelector),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n        return [bbox.width, bbox.height];\n    }\n\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    iframeSelector: string,\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        iframeSelector,\n        target, container!, rootContainer!, false\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target, iframeSelector);\n        const iframe = document.querySelector(iframeSelector) as HTMLIFrameElement;\n        const contentDocument = iframe.contentDocument;\n        containerClientRect = getClientRect(\n          getOffsetInfo(parentContainer, parentContainer, iframeSelector).offsetParent || contentDocument!.body,\n          iframeSelector,\n          true,\n\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement, iframeSelector);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, iframeSelector: string, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentDocument = iframe.contentDocument;\n    const contentWindow = iframe.contentWindow;\n    if (el === contentDocument!.body || el === contentDocument!.documentElement) {\n        width = contentWindow!.innerWidth;\n        height = contentWindow!.innerHeight;\n        left = -(contentDocument!.documentElement.scrollLeft || contentDocument!.body.scrollLeft);\n        top = -(contentDocument!.documentElement.scrollTop || contentDocument!.body.scrollTop);\n    } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        right: left + width,\n        top,\n        bottom: top + height,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el, iframeSelector).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<keyof T, \"moveable\" | \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" | \"datas\" | \"currentTarget\">>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (datas.isStartEvent) {\n        datas.lastEvent = nextParams;\n    } else {\n        datas.isStartEvent = true;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<\n        keyof T,\n        \"moveable\" | \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" |\n        \"datas\" | \"currentTarget\" | \"lastEvent\" | \"isDrag\" | \"isDouble\">\n    > & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any> = MoveableProps, U extends keyof T = string>(\n    moveable: any,\n    name: U,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: HTMLElement | SVGElement, iframeSelector: string, pseudoElt?: string | null) {\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentWindow = iframe.contentWindow;\n    return contentWindow!.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirection = directions.filter(dir => dir === \"w\" || dir === \"e\")[0];\n        const horizontalDirection = directions.filter(dir => dir === \"n\" || dir === \"s\")[0];\n\n        dists[index] = dist;\n        controlPoses.forEach((controlPose, i) => {\n            const {\n                direction: controlDir,\n            } = controlPose;\n\n            if (!controlDir) {\n                return;\n            }\n            if (controlDir.indexOf(verticalDirection) > -1) {\n                dists[i][0] = dist[0];\n            }\n            if (controlDir.indexOf(horizontalDirection) > -1) {\n                dists[i][1] = dist[1];\n            }\n        });\n        if (verticalDirection) {\n            dists[1][0] = dist[0] / 2;\n            dists[5][0] = dist[0] / 2;\n        }\n        if (horizontalDirection) {\n            dists[3][1] = dist[1] / 2;\n            dists[7][1] = dist[1] / 2;\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function getTransform(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(target: MoveableRefType<T>, iframeSelector: string, isSelector: true): T | null;\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(target: MoveableRefType<T>, iframeSelector: string, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    iframeSelector: string,\n    isSelector?: boolean\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n            const contentDocument = iframe.contentDocument;\n            return contentDocument!.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, iframeSelector: string, isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, iframeSelector: string, isSelector?: boolean): Array<HTMLElement | SVGElement | string | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, iframeSelector: string, isSelector?: boolean) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n            const contentDocument = iframe.contentDocument;\n            return [...prev, ...[].slice.call(contentDocument!.querySelectorAll<HTMLElement>(target))];\n        }\n        prev.push(getRefTarget(target, iframeSelector, isSelector));\n        return prev;\n    }, [] as Array<SVGElement | HTMLElement | string | null | undefined>);\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleDirection = isHorizontal ? \"Y\" : \"X\";\n    // const scaleDirection2 = isHorizontal ? \"Y\" : \"X\";\n\n    return <div\n        key={key}\n        className={classNames.join(\" \")}\n        style={{\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleDirection}(-50%) scale${scaleDirection}(${zoom})`,\n        }}\n    />\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [prefix(\"line\", \"guideline\", info.direction), ...info.classNames].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${v}px`),\n    }, React);\n}\n","import { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default {\n    name: \"pinchable\",\n    updateRect: true,\n    props: {\n        pinchable: Boolean,\n    } as const,\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!childMoveable.state.gesto) {\n                childMoveable.state.gesto = datas.childGestos[i];\n            }\n            childEvent = setCustomDrag(ev, childMoveable.state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAble<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, getTransform, calculateMoveablePosition,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    const nextIndex = index === -1 ? nextTransforms.length\n        : index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n\n    const result = getTransform(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any) {\n    setTransformIndex(e, -1);\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    return getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    Guideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, MoveableClientRect,\n    ElementGuidelineValue,\n} from \"../../types\";\nimport {\n    selectValue, throttle, getAbsolutePosesByState,\n    getRect, groupBy, getTinyDist, calculateInversePosition,\n    calculatePosition, roundSign,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { diff } from \"@egjs/children-differ\";\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    snapThreshold: number,\n    index: number,\n    [start, end]: number[],\n    [otherStart, otherEnd]: number[],\n) {\n    const totalGuidelines: Guideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n\n    const elementGuidelines\n        = groupBy(guidelines.filter(({ type: guidelineType }) => guidelineType === type), ({ element }) => element)\n            .map(group => group[0])\n            .filter(({ pos, sizes }) => pos[otherIndex] <= otherEnd\n                && otherStart <= pos[otherIndex] + sizes![otherIndex]);\n\n    elementGuidelines.forEach(guideline1 => {\n        const elementStart = guideline1.pos[index];\n        const elementEnd = elementStart + guideline1.sizes![index];\n\n        elementGuidelines.forEach(guideline2 => {\n            const {\n                pos: guideline2Pos,\n                sizes: guideline2Sizes,\n                element: guideline2Element,\n                className: guidline2ClassName,\n            } = guideline2;\n            const targetStart = guideline2Pos[index];\n            const targetEnd = targetStart + guideline2Sizes![index];\n            let pos = 0;\n            let gap = 0;\n            let canSnap = true;\n\n            if (elementEnd <= targetStart) {\n                // gap -\n                gap = elementEnd - targetStart;\n                pos = targetEnd - gap;\n\n                if (start < pos - snapThreshold) {\n                    canSnap = false;\n                }\n                // element target moveable\n            } else if (targetEnd <= elementStart) {\n                // gap +\n                gap = elementStart - targetEnd;\n                pos = targetStart - gap;\n\n                if (end > pos + snapThreshold) {\n                    canSnap = false;\n                }\n                // moveable target element\n            } else {\n                return;\n            }\n            if (canSnap) {\n                totalGuidelines.push({\n                    pos: otherType === \"vertical\" ? [pos, guideline2Pos[1]] : [guideline2Pos[0], pos],\n                    element: guideline2Element,\n                    sizes: guideline2Sizes,\n                    size: 0,\n                    type: otherType,\n                    gap,\n                    className: guidline2ClassName,\n                    gapGuidelines: elementGuidelines,\n                });\n            }\n            if (elementEnd <= start && end <= targetStart) {\n                // elementEnd   moveable   target\n                const centerPos = ((targetStart + elementEnd) - (end - start)) / 2;\n\n                if (throttle(start - (centerPos - snapThreshold), 0.1) >= 0) {\n                    totalGuidelines.push({\n                        pos: otherType === \"vertical\" ? [centerPos, guideline2Pos[1]] : [guideline2Pos[0], centerPos],\n                        className: guidline2ClassName,\n                        element: guideline2Element,\n                        sizes: guideline2Sizes,\n                        size: 0,\n                        type: otherType,\n                        gap: elementEnd - start,\n                        gapGuidelines: elementGuidelines,\n                    });\n                }\n            }\n        });\n    });\n    return totalGuidelines;\n}\nexport function addGuidelines(\n    totalGuidelines: Guideline[],\n    width: number,\n    height: number,\n    horizontalGuidelines?: number[] | false,\n    verticalGuidelines?: number[] | false,\n    clientLeft = 0,\n    clientTop = 0,\n): Guideline[] {\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"horizontal\", pos: [0, throttle(pos - clientTop, 0.1)], size: width! });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"vertical\", pos: [throttle(pos - clientLeft, 0.1), 0], size: height! });\n    });\n    return totalGuidelines;\n}\nexport function caculateElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n) {\n    const guidelines: Guideline[] = [];\n\n    if (!values.length) {\n        return guidelines;\n    }\n    const state = moveable.state;\n    const {\n        snapCenter,\n    } = moveable.props;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    values.forEach(value => {\n        const {\n            element,\n            top: topValue,\n            left: leftValue,\n            right: rightValue,\n            bottom: bottomValue,\n            className,\n        } = value;\n        const rect = element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n        const width = elementRight - elementLeft;\n        const height = elementBottom - elementTop;\n        const sizes = [width, height];\n\n        //top\n        if (topValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementLeft + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n                className,\n            });\n        }\n\n        // bottom\n        if (bottomValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementRight + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n                className,\n            });\n        }\n\n        // left\n        if (leftValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementTop + distTop, 0.1),\n                ], size: width,\n                sizes,\n                className,\n            });\n        }\n\n        // right\n        if (rightValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementBottom + distTop, 0.1),\n                ], size: width,\n                sizes,\n                className,\n            });\n        }\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                sizes,\n                center: true,\n                className,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                sizes,\n                center: true,\n                className,\n            });\n        }\n    });\n    return guidelines;\n}\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRefresh: boolean,\n    prevGuidelines: Guideline[] = [],\n) {\n    const guidelines: Guideline[] = [];\n    const state = moveable.state;\n\n    if (isRefresh && state.guidelines && state.guidelines.length) {\n        return guidelines;\n    }\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        return guidelines;\n    }\n\n    const prevValues = state.elementGuidelineValues || [];\n    const nextValues = elementGuidelines.map(el => {\n        if (\"parentElement\" in el) {\n            return {\n                element: el,\n            };\n        }\n        return el;\n    });\n\n    state.elementGuidelineValues = nextValues;\n\n    const { added, removed } = diff(prevValues.map(v => v.element), nextValues.map(v => v.element));\n    const removedElements = removed.map(index => prevValues[index].element);\n    const addedGuidelines = caculateElementGuidelines(moveable, added.map(index => nextValues[index]).filter(value => {\n        return (value.refresh && isRefresh) || (!value.refresh && !isRefresh);\n    }));\n\n    return [\n        ...prevGuidelines.filter(guideline => removedElements.indexOf(guideline.element!) === -1),\n        ...addedGuidelines,\n    ];\n}\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        staticGuidelines,\n        containerClientRect: {\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            overflow,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const props = moveable.props;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n    } = props;\n    const totalGuidelines: Guideline[] = [...staticGuidelines, ...getElementGuidelines(moveable, true)];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n        const elementGuidelines = staticGuidelines.filter(({ element }) => element);\n\n        totalGuidelines.push(...getGapGuidelines(\n            elementGuidelines,\n            \"horizontal\",\n            snapThreshold,\n            0,\n            [left, right],\n            [top, bottom],\n        ), ...getGapGuidelines(\n            elementGuidelines,\n            \"vertical\",\n            snapThreshold,\n            1,\n            [top, bottom],\n            [left, right],\n        ));\n    }\n\n    addGuidelines(\n        totalGuidelines,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        snapHorizontal && horizontalGuidelines,\n        snapVertical && verticalGuidelines,\n        clientLeft,\n        clientTop,\n    );\n\n    return totalGuidelines;\n}\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        {\n            snapThreshold,\n            snapCenter,\n            snapElement,\n        },\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: Guideline[],\n    posesX: number[],\n    posesY: number[],\n    options: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    },\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, options),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, options),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: Guideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    {\n        snapThreshold = 5,\n        snapElement,\n        snapCenter,\n    }: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    } = {},\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n","import { average, getRad } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, throttle, getTinyDist } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (isRender && !dy1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dx1) {\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !dx1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / (dy1 / dx1) + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckInnerBoundLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad } from \"@daybrush/utils\";\nimport { BoundInfo, SnappableProps, BoundType, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = { left, top, right, bottom };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\n\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.bounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    Guideline,\n    SnapInfo,\n    BoundInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    DraggableProps,\n    SnapOffsetInfo,\n    GapGuideline,\n    SnappableOptions,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    SnapBoundInfo,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    throttle,\n    getDistSize,\n    groupBy,\n    flat,\n    maxOffset,\n    minOffset,\n    triggerEvent,\n    calculateInversePosition,\n    directionCondition,\n    renderInnerGuideline,\n} from \"../utils\";\nimport { IObject, find, findIndex, hasClass, getRad } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { TINY_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLines,\n    getInnerBoundDragInfo,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    checkBoundKeepRatio,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    checkMoveableSnapPoses,\n    getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n    checkSnapPoses,\n    getElementGuidelines,\n    calculateContainerPos,\n    getTotalGuidelines,\n} from \"./snappable/snap\";\n\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\nconst DIRECTION_NAMES = {\n    horizontal: [\n        \"left\",\n        \"top\",\n        \"width\",\n        \"Y\",\n        \"X\",\n    ] as const,\n    vertical: [\n        \"top\", \"left\", \"height\", \"X\", \"Y\",\n    ] as const,\n} as const;\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    state.elementGuidelineValues = [];\n    state.staticGuidelines = getElementGuidelines(moveable, false);\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return [0, 0];\n    }\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return [widthOffset, heightOffset];\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: number[][],\n    boundPoses: number[][] = poses\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        moveable.props.bounds,\n        boundPoses.map((pos) => pos[0]),\n        boundPoses.map((pos) => pos[1])\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.map((pos) => pos[0]),\n        poses.map((pos) => pos[1]),\n        moveable.props.snapCenter\n    );\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: Guideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    options: {\n        isRequest?: boolean;\n        snapThreshold?: number;\n        snapCenter?: boolean;\n        snapElement?: boolean;\n    } = {}\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = options.isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkSnapPoses(guideines, posesX, posesY, options);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n\n            const verticalDirection = normalized(\n                otherDirection[1] - fixedDirection[1]\n            );\n            const horizontalDirection = normalized(\n                otherDirection[0] - fixedDirection[0]\n            );\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const [, heightOffset] = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + verticalDirection * heightOffset;\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const [widthOffset] = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) -\n                    otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + horizontalDirection * widthOffset;\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, [otherEndPos]);\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n            isVertical,\n            datas\n        ).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]]\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push([fixedDirection, direction]);\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]]\n            );\n        } else {\n            directions.push(\n                [\n                    [fixedDirection[0], -1],\n                    [direction[0], -1],\n                ],\n                [\n                    [fixedDirection[0], 0],\n                    [direction[0], 0],\n                ],\n                [\n                    [fixedDirection[0], 1],\n                    [direction[0], 1],\n                ]\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction]\n            );\n        } else {\n            directions.push(\n                [\n                    [-1, fixedDirection[1]],\n                    [-1, direction[1]],\n                ],\n                [\n                    [0, fixedDirection[1]],\n                    [0, direction[1]],\n                ],\n                [\n                    [1, fixedDirection[1]],\n                    [1, direction[1]],\n                ]\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [\n                [1, 0],\n                [1, -1],\n            ],\n            [\n                [1, 0],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [-1, 1],\n            ],\n\n            [\n                [-1, 0],\n                [-1, -1],\n            ],\n            [\n                [-1, 0],\n                [-1, 1],\n            ],\n            [\n                [0, -1],\n                [1, -1],\n            ],\n            [\n                [0, -1],\n                [-1, -1],\n            ]\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckInnerBoundLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            lines,\n            getPosByDirection(poses, [0, 0]),\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapSize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const { width, height, fixedPosition } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / width, heightOffset / height])\n                ),\n                width,\n                height,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n\n    return [sizeDist[0] / width, sizeDist[1] / height];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Guideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\nfunction groupByElementGuidelines(\n    guidelines: Guideline[],\n    clientPos: number,\n    size: number,\n    index: number\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(\n        guidelines.filter(({ element, gap }) => element && !gap),\n        ({ element, pos }) => {\n            const elementPos = pos[index];\n            const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n            const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n            const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n                return element === groupElement && elementPos === groupPos;\n            });\n            if (groupInfo) {\n                return groupInfo[2];\n            }\n            groupInfos.push([element!, elementPos, groupKey]);\n            return groupKey;\n        }\n    );\n    group.forEach((elementGuidelines) => {\n        elementGuidelines.sort((a, b) => {\n            const result =\n                getElementGuidelineDist(a.pos[index], a.size, clientPos, size)\n                    .size -\n                getElementGuidelineDist(b.pos[index], a.size, clientPos, size)\n                    .size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nfunction renderElementGroup(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    direction: \"vertical\" | \"horizontal\",\n    groups: Guideline[][],\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    snapDigit: number,\n    index: number,\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: Renderer\n) {\n    const { zoom, isDisplaySnapDigit = true } = moveable.props;\n    const [posName1, posName2, sizeName, , scaleDirection] = DIRECTION_NAMES[direction];\n    return flat(\n        groups.map((elementGuidelines, i) => {\n            let isFirstRenderSize = true;\n\n            return elementGuidelines.map(({ pos, size }, j) => {\n                const {\n                    pos: linePos,\n                    size: lineSize,\n                } = getElementGuidelineDist(\n                    pos[index],\n                    size,\n                    clientPos,\n                    clientSize\n                );\n\n                if (lineSize < snapThreshold) {\n                    return null;\n                }\n                const isRenderSize = isFirstRenderSize;\n\n                isFirstRenderSize = false;\n                const snapSize =\n                    isDisplaySnapDigit && isRenderSize\n                        ? parseFloat(lineSize.toFixed(snapDigit))\n                        : 0;\n                return (\n                    <div\n                        key={`${direction}LinkGuideline${i}-${j}`}\n                        className={prefix(\"guideline-group\", direction)}\n                        style={{\n                            [posName1]: `${minPos + linePos}px`,\n                            [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                            [sizeName]: `${lineSize}px`,\n                        }}\n                    >\n                        {renderInnerGuideline(\n                            {\n                                direction: direction,\n                                classNames: [prefix(\"dashed\")],\n                                size: \"100%\",\n                                posValue: [0, 0],\n                                sizeValue: lineSize,\n                                zoom: zoom!,\n                            },\n                            React\n                        )}\n                        <div\n                            className={prefix(\"size-value\")}\n                            style={{\n                                transform: `translate${scaleDirection}(-50%) scale(${zoom})`,\n                            }}\n                        >\n                            {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                        </div>\n                    </div>\n                );\n            });\n        })\n    );\n}\nfunction renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nfunction renderGuidelines(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    guidelines: Guideline[],\n    targetPos: number[],\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n\n    return guidelines.map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}Guideline${i}`,\n                classNames: element ? [prefix(\"bold\")] : [],\n                direction: direction,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nfunction getGapGuidelinesToStart(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap > 0 ? targetSizes[0] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] <= targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => bPos[index] - aPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos + gapSizes![index], 0.0001) ===\n                throttle(start - absGap, 0.0001)\n            ) {\n                start = nextPos;\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] +\n                gapGuideline.pos[index] +\n                gapGuideline.sizes![index];\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelinesToEnd(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap < 0 ? targetSizes[index] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] > targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => aPos[index] - bPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos, 0.0001) === throttle(start + absGap, 0.0001)\n            ) {\n                start = nextPos + gapSizes![index];\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] + gapGuideline.pos[index] - absGap;\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    targetPos: number[],\n    targetSizes: number[]\n): GapGuideline[] {\n    const elementGuidelines = guidelines.filter(\n        ({ element, gap, type: guidelineType }) =>\n            element && gap && guidelineType === type\n    );\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return flat(\n        elementGuidelines.map((guideline) => {\n            const pos = guideline.pos;\n            const gap = guideline.gap!;\n            const gapGuidelines = guideline.gapGuidelines!;\n            const sizes = guideline.sizes!;\n\n            let offset = minOffset(\n                pos[otherIndex] + sizes[otherIndex] - targetPos[otherIndex],\n                pos[otherIndex] -\n                targetPos[otherIndex] -\n                targetSizes[otherIndex]\n            );\n            const minSize = Math.min(\n                sizes[otherIndex],\n                targetSizes[otherIndex]\n            );\n\n            if (offset > 0 && offset > minSize) {\n                offset = (offset - minSize / 2) * 2;\n            } else if (offset < 0 && offset < -minSize) {\n                offset = (offset + minSize / 2) * 2;\n            }\n\n            const otherPos =\n                (offset > 0 ? 0 : targetSizes[otherIndex]) + offset / 2;\n            return [\n                ...getGapGuidelinesToStart(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n                ...getGapGuidelinesToEnd(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n            ];\n        })\n    );\n}\nfunction renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    direction: \"vertical\" | \"horizontal\",\n    gapGuidelines: GapGuideline[],\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: any\n) {\n    const { snapDigit = 0, isDisplaySnapDigit = true, zoom } = moveable.props;\n    const scaleDirection = direction === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = direction === \"horizontal\" ? \"width\" : \"height\";\n\n    return gapGuidelines.map(({ renderPos, gap, className }, i) => {\n        const absGap = Math.abs(gap!);\n        const snapSize = isDisplaySnapDigit\n            ? parseFloat(absGap.toFixed(snapDigit))\n            : 0;\n        return (\n            <div\n                key={`${direction}GapGuideline${i}`}\n                className={prefix(\"guideline-group\", direction)}\n                style={{\n                    left: `${renderPos[0]}px`,\n                    top: `${renderPos[1]}px`,\n                    [sizeName]: `${absGap}px`,\n                }}\n            >\n                {renderInnerGuideline(\n                    {\n                        direction: direction,\n                        classNames: [prefix(\"gap\"), className],\n                        size: \"100%\",\n                        posValue: [0, 0],\n                        sizeValue: absGap,\n                        zoom: zoom!,\n                    },\n                    React\n                )}\n                <div\n                    className={prefix(\"size-value\", \"gap\")}\n                    style={{\n                        transform: `translate${scaleDirection}(-50%) scale(${zoom})`,\n                    }}\n                >\n                    {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                </div>\n            </div>\n        );\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        externalBounds || moveable.props.bounds,\n        verticalPoses,\n        horizontalPoses\n    );\n\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        snapGap: Boolean,\n        isDisplaySnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n            is3d,\n            rootMatrix,\n        } = moveable.state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n\n        const n = is3d ? 4 : 3;\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const containerPos = calculateContainerPos(\n            rootMatrix,\n            containerClientRect,\n            n\n        );\n        const [clientLeft, clientTop] = calculateInversePosition(\n            rootMatrix,\n            [\n                targetClientRect.left - containerPos[0],\n                targetClientRect.top - containerPos[1],\n            ],\n            n\n        );\n\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            snapDistFormat = (v: number) => v,\n        } = moveable.props;\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: Guideline[] = [];\n        const horizontalGuidelines: Guideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, true, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, true, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(\n                    ...getSnapGuidelines(horizontalPosInfos)\n                );\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const elementHorizontalGroup = groupByElementGuidelines(\n            horizontalGuidelines,\n            clientLeft,\n            width,\n            0\n        );\n        const elementVerticalGroup = groupByElementGuidelines(\n            verticalGuidelines,\n            clientTop,\n            height,\n            1\n        );\n\n        const gapHorizontalGuidelines = getGapGuidelines(\n            verticalGuidelines,\n            \"vertical\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n        const gapVerticalGuidelines = getGapGuidelines(\n            horizontalGuidelines,\n            \"horizontal\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: groupBy(\n                    allGuidelines.filter(({ element }) => element),\n                    ({ element }) => element\n                ),\n                gaps: [...gapVerticalGuidelines, ...gapHorizontalGuidelines],\n            },\n            true\n        );\n\n        return [\n            ...renderGapGuidelines(\n                moveable,\n                \"vertical\",\n                gapVerticalGuidelines,\n                snapDistFormat,\n                React\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                \"horizontal\",\n                gapHorizontalGuidelines,\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroup(\n                moveable,\n                \"horizontal\",\n                elementHorizontalGroup,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                snapDigit,\n                0,\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroup(\n                moveable,\n                \"vertical\",\n                elementVerticalGroup,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                snapDigit,\n                1,\n                snapDistFormat,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.staticGuidelines = getElementGuidelines(moveable, false, state.staticGuidelines);\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(e: any, moveable: MoveableManagerInterface) {\n        if (directionCondition(e) || rotatableDragControlCondtion(e, moveable)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.staticGuidelines = [];\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n * When you drag, make the snap in the center of the target. (default: false)\n * @name Moveable.Snappable#snapCenter\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n * });\n *\n * moveable.snapCenter = true;\n */\n\n/**\n * When you drag, make the snap in the vertical guidelines. (default: true)\n * @name Moveable.Snappable#snapVertical\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapVertical = false;\n */\n/**\n * When you drag, make the snap in the horizontal guidelines. (default: true)\n * @name Moveable.Snappable#snapHorizontal\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapHorizontal = false;\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * When you drag, make the snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapElement\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapElement = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: null)\n * @name Moveable.Snappable#bounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries. (default: null)\n * @name Moveable.Snappable#innerBounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent, setDefaultTransformIndex,\n} from \"../gesto/GestoUtils\";\nimport { throttleArray, triggerEvent, fillParams, throttle, getDistSize, prefix, fillEndParams } from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = window.getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDeltaX = distX - (datas.passDistX || 0);\n        datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillEndParams<OnDragEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDeltaX, passDeltaY } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", [passDeltaX, passDeltaY], e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import { prefix, getControlTransform, throttle, getLineStyle } from \"./utils\";\nimport { Renderer, MoveableManagerInterface, RenderDirections } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\nexport function renderControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    React: Renderer,\n): any[] {\n    const {\n        renderPoses,\n        rotation: radRotation,\n        direction,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n\n    const directionMap: IObject<boolean> = {};\n\n    if (!directions) {\n        return [];\n    }\n    const sign = (direction > 0 ? 1 : -1);\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n    const degRotation = radRotation / Math.PI * 180;\n\n    renderDirections.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return renderDirections.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(radRotation, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n) {\n    return renderControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n} from \"../utils\";\nimport { IObject, hasClass, getRad } from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderControls } from \"../renderDirections\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startValue: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    // const absoluteDeg = startValue + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = dist - prevDeg;\n\n    return [delta, dist, startValue + dist];\n}\nfunction getDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startValue: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startValue;\n    let absoluteDeg = loop * 360 + deg - startDeg + startValue;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startValue);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startValue;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, startValue + dist];\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startValue: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startValue,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(e: any, moveable: MoveableManagerInterface<RotatableProps>) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (hasClass(target, prefix(\"rotation-control\"))) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, moveable.props.iframeSelector, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            jsxs.push(...renderControls(moveable, [], React));\n        }\n\n\n        return jsxs;\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n        datas.absoluteInfo = {\n            origin: rect.origin,\n            startValue: rect.rotation,\n        };\n        setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e);\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        let absoluteDelta: number;\n        let absoluteDist: number;\n        let absoluteRotate: number;\n\n        const startDeg = 180 / Math.PI * startValue;\n        const absoluteStartDeg = absoluteInfo.startValue;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startDeg);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, beforeDirection, startDeg);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getParentDeg(moveable, rect, absoluteInfo, parentDist, direction, absoluteStartDeg);\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, beforeDirection, startDeg, throttleRotate);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getDeg(moveable, rect, absoluteInfo, parentRotate, direction, absoluteStartDeg, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY,\n                startDeg, throttleRotate,\n            );\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getRotateInfo(\n                    moveable, rect, absoluteInfo, direction, clientX, clientY,\n                    absoluteStartDeg, throttleRotate,\n                );\n        }\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotate}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate,\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillEndParams<OnRotateEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapSize } from \"./Snappable\";\nimport { calculateBoundSize, IObject, isString, getRad, convertUnitSize } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    updateRect: true,\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target, moveable.props.iframeSelector);\n        const padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = window.getComputedStyle(target);\n\n            const {\n                position,\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            } = style;\n            const isParentElement = position === \"static\" || position === \"relative\";\n            const container = isParentElement\n                ? target.parentElement\n                : (target as HTMLElement).offsetParent;\n\n            let containerWidth = width;\n            let containerHeight = height;\n\n            if (container) {\n                containerWidth = container!.clientWidth;\n                containerHeight = container!.clientHeight;\n\n                if (isParentElement) {\n                    const containerStyle = window.getComputedStyle(container!);\n\n                    containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n                    containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n                }\n            }\n\n            datas.minSize = plus([\n                convertUnitSize(minWidth, containerWidth) || 0,\n                convertUnitSize(minHeight, containerHeight) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                convertUnitSize(maxWidth, containerWidth) || Infinity,\n                convertUnitSize(maxHeight, containerHeight) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: number[]) => {\n                datas.minSize = minSize;\n            },\n            setMax: (maxSize: number[]) => {\n                datas.maxSize = [\n                    maxSize[0] || Infinity,\n                    maxSize[1] || Infinity,\n                ];\n            },\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            fixedDirection,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            throttleResize = 0,\n            parentMoveable,\n            snapThreshold = 5,\n        } = moveable.props;\n        let direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        let fixedPosition = dragClient;\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n\n            if (keepRatio) {\n                if (!distWidth) {\n                    distWidth = distHeight * ratio;\n                } else if (!distHeight) {\n                    distHeight = distWidth / ratio;\n                }\n            }\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight / ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth * ratio;\n                } else {\n                    // two-way\n                    const startWidthSize = sizeDirection[0] * 2 * startOffsetWidth;\n                    const startHeightSize = sizeDirection[1] * 2 * startOffsetHeight;\n                    const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                        - getDistSize([startWidthSize, startHeightSize]);\n                    const ratioRad = getRad([0, 0], [ratio, 1]);\n\n                    distWidth = Math.cos(ratioRad) * distSize;\n                    distHeight = Math.sin(ratioRad) * distSize;\n                }\n            } else if (!keepRatio) {\n                const nextDirection = [...direction];\n\n                if (!startOffsetWidth) {\n                    if (dist[0] < 0) {\n                        nextDirection[0] = -1;\n                    } else if (dist[0] > 0) {\n                        nextDirection[0] = 1;\n                    }\n                }\n                if (!startOffsetHeight) {\n                    if (dist[1] < 0) {\n                        nextDirection[1] = -1;\n                    } else if (dist[1] > 0) {\n                        nextDirection[1] = 1;\n                    }\n                }\n                direction = nextDirection;\n                sizeDirection = nextDirection;\n                distWidth = sizeDirection[0] * dist[0];\n                distHeight = sizeDirection[1] * dist[1];\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            if (isWidth) {\n                nextHeight = nextWidth / ratio;\n            } else {\n                nextWidth = nextHeight * ratio;\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapSize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = nextWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = nextHeight * ratio;\n            }\n        } else {\n            if (startOffsetWidth + distWidth < -snapThreshold) {\n                snapDist[0] = 0;\n            }\n            if (startOffsetWidth + distHeight < -snapThreshold) {\n                snapDist[1] = 0;\n            }\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        [nextWidth, nextHeight] = calculateBoundSize(\n            [nextWidth, nextHeight],\n            minSize,\n            maxSize,\n            keepRatio,\n        );\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            nextWidth, nextHeight,\n            fixedDirection, fixedPosition,\n            transformOrigin,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent<ResizableProps>(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent<ResizableProps>(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.offsetWidth] - offset number of width\n     * @param {number} [e.offsetHeight] - offset number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable.Resizable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize.\n * @name Moveable.Resizable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 0,\n * });\n *\n * moveable.throttleResize = 1;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Resizable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Resizable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject, getRad, getDist } from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        setDefaultTransformIndex(e);\n\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startValue = [1, 1];\n\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent<ScalableProps, \"onScaleStart\">(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n            fixedDirection,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        const state = moveable.state;\n        // const startWidth = width * startValue[0];\n        // const startHeight = height * startValue[1];\n\n        let scaleX = 1;\n        let scaleY = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            scaleX = (width + parentDist[0]) / width;\n            scaleY = (height + parentDist[1]) / height;\n        } else if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dragDist = getDragDist({ datas, distX, distY });\n\n            let distWidth = sizeDirection[0] * dragDist[0];\n            let distHeight = sizeDirection[1] * dragDist[1];\n\n            if (keepRatio && width && height) {\n                const rad = getRad([0, 0], dragDist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight / ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth * ratio;\n                } else {\n                    // two-way\n                    distHeight = distWidth * ratio;\n                }\n            }\n            scaleX = (width + distWidth) / width;\n            scaleY = (height + distHeight) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const dist = [scaleX / startValue[0], scaleY / startValue[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = width * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / height / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = height * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / width / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, fixedDirection, fixedPosition, datas);\n\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scaleX === prevDist[0] && scaleY === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: width,\n            offsetHeight: height,\n            direction,\n\n            // beforeScale,\n            // beforeDist,\n            // beforeDelta,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable.Scalable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines, checkMoveableSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = moveable.state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\n\nexport default {\n    name: \"origin\",\n    props: {\n        origin: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n};\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, moveable.props.iframeSelector, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        props: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\n\nexport default {\n    name: \"padding\",\n    props: {\n        padding: Object,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n};\n\n/**\n * Add padding around the target to increase the drag area. (default: null)\n * @name Moveable#padding\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize, moveControlPos,\n} from \"../utils\";\nimport { plus, minus } from \"@scena/matrix\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { addGuidelines, checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./Snappable\";\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(index, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(index);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(index);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(index, 1);\n        poses.splice(index, 1);\n    } else if (clipType === \"inset\") {\n        if (index < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, index, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = inputTarget ? inputTarget.getAttribute(\"class\") : \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.index = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const { datas, originalDatas } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const draggableData = (originalDatas && originalDatas.draggable) || {};\n        const { isControl, isLine, isArea, index, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        let [distX, distY] = draggableData.isDrag ? draggableData.prevDist : getDragDist(e);\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[index].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[index];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, index, dist, isRect);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = addGuidelines(\n            [],\n            width!, height!,\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        for (let i = 0; i < 2; ++i) {\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                guidelines,\n                props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n                guideXPoses,\n                guideYPoses,\n                {\n                    snapThreshold: 5,\n                },\n            );\n            const snapOffsetY = horizontalSnapInfo.offset;\n            const snapOffsetX = verticalSnapInfo.offset;\n\n            if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n                const guideRect = getRect(nextPoses);\n                let cy = guideRect.bottom - guideRect.top;\n                let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n                const distSnapX = verticalSnapInfo.isBound\n                    ? Math.abs(snapOffsetX)\n                    : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n                const distSnapY = horizontalSnapInfo.isBound\n                    ? Math.abs(snapOffsetY)\n                    : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n                cx -= distSnapX;\n                cy -= distSnapY;\n\n                if (isCircle) {\n                    cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                    cx = cy;\n                }\n                const center = guidePoses[0];\n\n                guidePoses[1][1] = center[1] - cy;\n                guidePoses[2][0] = center[0] + cx;\n                guidePoses[3][1] = center[1] + cy;\n                guidePoses[4][0] = center[0] - cx;\n            } else {\n                guidePoses.forEach((pos, j) => {\n                    const dist = dists[j];\n\n                    if (dist[0]) {\n                        pos[0] -= snapOffsetX;\n                    }\n                    if (dist[1]) {\n                        pos[1] -= snapOffsetY;\n                    }\n                });\n                break;\n            }\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            {\n                snapThreshold: 1,\n            },\n        );\n\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<OriginDraggableProps>(\n            moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(e: any) {\n        return this.dragControlCondition(e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = window.getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent<RoundableProps>(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent<RoundableProps>(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n            triggerEvent<RoundableProps>(moveable, \"onRoundEnd\",\n                fillEndParams<OnRoundEnd>(moveable, e, {}));\n        }\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            targetMatrix,\n        } = moveable.state;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        e.datas.startTransforms = [cssMatrix];\n    },\n    resetTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childMoveable, childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"Renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto, {GestoOptions} from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant: boolean,\n    iframeSelector: string\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [BeforeRenderable, ...(moveable as any)[ableType].slice(), Renderable];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n\n    if (!ables.length) {\n        return false;\n    }\n    const events = ables.filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        const iframe = document.querySelector(iframeSelector) as HTMLIFrameElement;\n        const contentDocument = iframe.contentDocument;\n        inputTarget = contentDocument!.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    const results = events.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](e, moveable);\n        }\n\n        if (nextDatas.isEventStart) {\n            return able[eventName](moveable, { ...e, datas: nextDatas, originalDatas: datas, inputTarget });\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    const isForceEnd = isStart && events.length && !isUpdate;\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        if (results.some(able => able.updateRect) && !isGroup) {\n            moveable.updateRect(eventType, false, false);\n        } else {\n            moveable.updateRect(eventType, true, false);\n        }\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e, false, iframeSelector);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || !moveable.isMoveableElement(eventTarget)\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    }, moveable.props.iframeSelector);\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n    iframeSelector: string\n) {\n    const iframe =  document.querySelector(iframeSelector) as HTMLIFrameElement;\n    const contentWindow = iframe.contentWindow;\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: GestoOptions = {\n        container: contentWindow as Window,\n        preventDefault: false,\n        pinchThreshold,\n        pinchOutside,\n        iframeSelector\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e, false, iframeSelector);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        this.target!.addEventListener(this.eventName.toLowerCase(), this.onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable;\n\n        this.ables.forEach(able => {\n            (able as any)[eventName]({\n                inputEvent: e,\n            }, moveable);\n        });\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this.onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n}\n","import * as React from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { getKeys, IObject } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        iframeSelector: \"\",\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        target: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        ...getTargetInfo(this.props.iframeSelector),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null>  = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            edge, parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, target: stateTarget, direction, renderPoses } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        const Renderer = {\n            createElement: React.createElement,\n        };\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0)}\n                {renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1)}\n                {renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2)}\n                {renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this.updateEvent(props);\n        this.updateNativeEvents(props);\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps) {\n        this.updateNativeEvents(prevProps);\n        this.updateEvent(prevProps);\n        this.updateCheckInput();\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetGesto) {\n            this.targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.props.iframeSelector, this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public isTargetChanged(prevProps: MoveableManagerProps, useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = prevProps.dragTarget || prevProps.target;\n        const dragArea = props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n\n        return isTargetChanged || ((useDragArea || dragArea) && prevDragArea !== dragArea);\n    }\n    public updateNativeEvents(prevProps: MoveableManagerProps) {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this.isTargetChanged(prevProps)) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    public updateEvent(prevProps: MoveableManagerProps) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isTargetChanged = this.isTargetChanged(prevProps, true);\n        const isUnset = (!hasTargetAble && this.targetGesto) || isTargetChanged;\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\", undefined, this.props.iframeSelector);\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request: (ableParam: IObject<any>) => {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant, this.props.iframeSelector);\n                return requester;\n            },\n            requestEnd: () => {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant, this.props.iframeSelector);\n                return requester;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant, this.props.iframeSelector);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css, this.props.iframeSelector);\n        }\n        return customStyleMap[key];\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (able.always || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement: React.createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable. (default: 1)\n * @name Moveable#zoom\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox. (default: \"\")\n * @name Moveable#className\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s) (default: target)\n * @name Moveable#dragTarget\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={moveable.props.cssStyled}\n                customStyledMap={moveable.props.customStyledMap}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\n\nexport default {\n    name: \"clickable\",\n    props: {} as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragStart() {},\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent<ClickableProps>(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent<ClickableProps>(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n} as const;\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default {\n    name: \"edgeDraggable\",\n    props: {\n        edgeDraggable: Boolean,\n    } as const,\n    events: {} as const,\n    dragControlCondition(e: any, moveable: MoveableManagerInterface<DraggableProps>) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(e: any, moveable: MoveableGroupInterface<DraggableProps>) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n} as const;\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.events};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = prevProps.dragTarget || state.target;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\", {}, this.props.iframeSelector);\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.props.iframeSelector,\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public updateEvent() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = {};\n    public static makeStyled(iframeSelector: string) {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled[iframeSelector] = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style), iframeSelector);\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled[this.props.iframeSelector]) {\n            moveableContructor.makeStyled(this.props.iframeSelector);\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = getRefTargets((props.target || props.targets) as any, this.props.iframeSelector);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        this.refTargets = refTargets;\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled[this.props.iframeSelector],\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this.updateRefs();\n    }\n    public componentDidUpdate() {\n        this.updateRefs();\n    }\n    public updateRefs(isReset?: boolean) {\n        const refTargets = getRefTargets((this.props.target || this.props.targets) as any, this.props.iframeSelector);\n        let isUpdate = this.refTargets.some((target, i) => {\n            const nextTarget = refTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = isReset ? {} : this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n        const iframe =  document.querySelector(this.props.iframeSelector) as HTMLIFrameElement;\n        const contentDocument = iframe.contentDocument;\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                if (!selectorMap[target]) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(contentDocument!.querySelectorAll(target));\n                } else {\n                    nextSelectorMap[target] = selectorMap[target];\n                }\n            }\n        });\n\n        this.selectorMap = nextSelectorMap;\n\n        if (isUpdate) {\n            this.forceUpdate();\n        }\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"names":["getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","res","exec","navigator","userAgent","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","getTransformMatrix","transform","isObject","value","splitBracket","split","v","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","iframeSelector","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","_a","splitUnit","style","transformOrigin","getOffsetInfo","lastParent","isParent","iframe","document","querySelector","contentDocument","body","target","parentElement","isEnd","position","tagName","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","targetOrigin","pos","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","bottom","right","getMatrixStackInfo","matrixes","is3d","targetTransformOrigin","targetMatrix","offsetContainer","convertCSStoMatrix","length","matrixesLength","convertDimension","offsetPos","push","getSVGMatrix","createIdentityMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","margin","scrollLeft","scrollTop","calculateElementInfo","rootContainer","isAbsolute3d","width","height","rotation","allResult","offsetWidth","offsetHeight","getSize","result","calculateMatrixStack","calculateMoveablePosition","allMatrix","rotationPosition","getRotationRad","direction","rootMatrix","beforeMatrix","offsetMatrix","targetTransform","pos3","pos4","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","originalContainer","endContainer","reverse","forEach","multiply","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","clientWidth","clientHeight","x","y","baseVal","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getBBox","bbox","calculatePosition","calculate","convertPositionMatrix","calculatePoses","getRect","poses","posesX","posesY","rectWidth","rectHeight","calculateRect","absoluteMatrix","undefined","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","y1","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","zoom","rad","getRad","getControlTransform","reduce","prev","getCSSSize","contentWindow","isOffset","isBoxSizing","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","moveableElement","parentContainer","beforeDirection","beforeOrigin","targetClientRect","resetClientRect","moveableClientRect","beforePosition","plus","getOrigin","getClientRect","originalBeforeOrigin","scrollWidth","scrollHeight","isExtends","innerWidth","innerHeight","clientRect","overflow","getDirection","direciton","getAttribute","dir","indexOf","getAbsolutePoses","dist","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","nums","_","unset","self","name","fillParams","moveable","params","datas","nextParams","__assign","state","clientX","clientY","inputEvent","currentTarget","isStartEvent","lastEvent","fillEndParams","isDrag","isDouble","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","able","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","minOffset","calculateInversePosition","convertDragDist","distX","distY","calculatePadding","convertCSSSize","size","isRelative","moveControlPos","controlPoses","isRect","sub","dists","directions","verticalDirection_1","horizontalDirection_1","controlPose","controlDir","isVertical","dirDir","dirHorizontal","dirVertical","getTinyDist","directionCondition","isRequest","requestAble","parentDirection","hasClass","invertObject","obj","nextObj","getTransform","transforms","beforeFunctionTexts","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts","afterFunctionTexts2","beforeFunctions","parse","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","beforeFunctionMatrix","toMat","beforeFunctionMatrix2","afterFunctionMatrix","afterFunctionMatrix2","allFunctionMatrix","targetFunctionMatrix","targetFunction","isArrayFormat","isArray","getRefTarget","isSelector","isString","isFunction","current","getRefTargets","targets","userTargets","call","querySelectorAll","getElementTargets","selectorMap","elementTargets","getAbsoluteRotation","deg","PI","renderGuideline","info","React","key","scaleDirection","className","renderInnerGuideline","__spreadArrays","sizeValue","posValue","updateRect","props","pinchable","Boolean","events","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","originalDatas","eventName","controlEventName","pinchAbles","controlAbles","canPinch","isPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","gesto","move","draggableDatas","draggable","parentEvent","client","isFlag","type","prevX","prevY","startX","startY","deltaX","deltaY","parentGesto","fillChildEvents","groupable","groupableDatas","childDatas","moveables","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","CustomGesto","childGestos","parentFlag","child","triggerChildAble","eachEvent","callback","calculatePointerDist","posX","posY","getDragDist","setDragStart","inverseMatrix","absoluteOrigin","startDragBeforeDist","startDragDist","getTransformDirection","beforeTransform","resolveTransformEvent","event","functionName","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","matFunctionName","beforeTransform2","targetTansform","afterTransform","afterTransform2","targetAllTransform","splice","isAppendTransform","convertTransformFormat","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","prevSize","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getDist","startPos","fixedDirection","fixedPos","getNextMatrix","getNextTransformMatrix","parseMat","fillTransformStartEvent","beforeRenderable","setTransform","startTransforms","splitSpace","setTransformIndex","setDefaultTransformIndex","startValue","functionValue","fillOriginalTransform","fillTransformEvent","nextTransform","drag","Draggable","getTranslateDist","fixedPosition","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","calculateContainerPos","containerRect","clientPos","getGapGuidelines","guidelines","snapThreshold","start","end","otherStart","otherEnd","totalGuidelines","otherIndex","otherType","elementGuidelines","guidelineType","element","sizes","guideline1","elementStart","elementEnd","guideline2","guideline2Pos","guideline2Sizes","guideline2Element","guidline2ClassName","targetStart","targetEnd","gap","canSnap","gapGuidelines","centerPos","addGuidelines","horizontalGuidelines","verticalGuidelines","caculateElementGuidelines","snapCenter","containerLeft","containerTop","getMinMaxs","targetLeft","targetTop","topValue","leftValue","rightValue","bottomValue","elementLeft","elementTop","elementRight","elementBottom","center","getElementGuidelines","isRefresh","prevGuidelines","prevValues","elementGuidelineValues","nextValues","diff","added","removed","removedElements","addedGuidelines","refresh","guideline","getTotalGuidelines","staticGuidelines","containerHeight","containerWidth","containerClientHeight","containerClientWidth","snapHorizontal","snapVertical","snapGap","_f","_g","checkMoveableSnapPoses","customSnapThreshold","snapElement","checkSnapPoses","options","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","every","checkInnerBoundDot","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","isRender","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckInnerBoundLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","Infinity","nextBounds","checkBounds","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","DIRECTION_NAMES","snapStart","enableSnap","hasGuidelines","ableName","snappable","solveNextOffset","solveEquation","widthOffset","heightOffset","getNextFixedPoses","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkMoveableSnapBounds","boundPoses","horizontalBoundInfos","verticalBoundInfos","snapIndex","snap","checkSnapBounds","guideines","normalized","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","verticalDirection","horizontalDirection","nextOtherPos","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapSize","checkSnapScale","sizeDist","snapOffset","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","snapPoses","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getElementGuidelineDist","elementPos","elementSize","targetSize","relativePos","groupByElementGuidelines","groupInfos","groupInfo","find","groupElement","groupPos","renderElementGroup","clientSize","snapDigit","snapDistFormat","isDisplaySnapDigit","posName1","posName2","sizeName","isFirstRenderSize","j","linePos","lineSize","isRenderSize","snapSize","toFixed","renderSnapPoses","renderPos","renderGuidelines","getGapGuidelinesToStart","targetSizes","guidelinePos","absGap","gapPos","aPos","bPos","gapSizes","gapGuideline","getGapGuidelinesToEnd","minSize","renderGapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","externalBounds","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","findIndex","Array","Number","Object","Function","onSnap","css","render","minLeft","minTop","containerPos","externalPoses","snapInfos","hasExternalPoses","externalRect","middle","verticalPosInfos","horizontalPosInfos","elementHorizontalGroup","elementVerticalGroup","gapHorizontalGuidelines","gapVerticalGuidelines","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","window","prevDist","prevBeforeDist","set","startRect","parentMoveable","dragRotateRad","ry","cos","rx","sin","passDeltaX","passDistX","passDeltaY","passDistY","beforeTranslate","beforeDist","beforeDelta","isControl","requestStart","requestEnd","renderControls","defaultDirections","renderPoses","radRotation","directionMap","renderDirections","degRotation","directionRotation","renderLine","renderAllDirections","renderDiagonalDirections","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","absoluteDeg","getRotateInfo","getRotationPositions","radPoses","isReverse","rotationTarget","contains","rotatable","String","onRotateStart","onRotate","onRotateEnd","onRotateGroupStart","onRotateGroup","onRotateGroupEnd","positions","jsxs","absoluteInfo","externalRotate","beforeInfo","afterInfo","rotatation","isRotate","groupDelta","targetDirection","_k","_l","beforeRotate","absoluteDelta","absoluteDist","absoluteRotate","absoluteStartDeg","_h","_j","inverseDist","inverseDelta","prevInverseDist","dragGroupControlCondition","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","rotateMatrix","distRotate","startRotation","getRotation","deltaRotate","resizable","throttleResize","onResizeStart","onResize","onResizeEnd","onResizeGroupStart","onResizeGroup","onResizeGroupEnd","edge","startOffsetWidth","startOffsetHeight","startWidth","startHeight","padding","maxSize","minWidth","minHeight","isParentElement","containerStyle","convertUnitSize","isWidth","setRatio","ratio","isFinite","setFixedDirection","setMin","setMax","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","signSize","startWidthSize","startHeightSize","distSize","ratioRad","nextDirection","snapDist","isNoSnap","calculateBoundSize","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onScale","onScaleEnd","onScaleGroupStart","onScaleGroup","onScaleGroupEnd","isScale","dragDist","stateDirection","snapHeight","snapWidth","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","on","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","getRadiusValues","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","wnValue","enValue","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getClipPath","defaultClip","customClip","clipText","clip","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","radiusPoses","_s","addClipPath","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isClipStart","isLine","isArea","draggableData","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","snapOffsetY","snapOffsetX","distSnapX","distSnapY","nextClipStyles","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","nextRect","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","isGroup","BeforeRenderable","Renderable","requestAble_1","elementFromPoint","results","nextDatas","isEventStart","isUpdate","isForceEnd","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","preventDefault","Gesto","stop","addEventListener","onEvent","removeEventListener","__extends","parentPosition","propsTarget","ControlBoxElement","checkUpdate","updateRenderPoses","stateTarget","groupTargets","isDragging","ableAttributes","Renderer","createElement","getEnabledAbles","renderAbles","wrapperMoveable","updateEvent","updateNativeEvents","updateCheckInput","prevProps","manager","destroy","triggerDragStart","Element","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","useDragArea","prevTarget","prevDragArea","isTargetChanged","eventKeys","getKeys","hasAbles","EventManager","setAbles","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","isUnset","unsetAbles","statePos","param","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","tag","customStyleMap","customStyledMap","styled","always","nextState","setState","MoveableManager","cssStyled","defaultGroupRotate","defaultGroupOrigin","refs","containsTarget","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","nextTarget","isContainerChanged","differ","update","changed","updateGroup","_super","MoveableGroup","defaultProps","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","refTargets","totalAbles","nextProps","MoveableIndividualGroup","updateRefs","isReset","nextSelectorMap","__decorate","withMethods","Moveable","makeMoveable"],"mappings":"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"}